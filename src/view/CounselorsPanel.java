/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import controllers.CounselorController;
import dao.CounselorDAO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Counselor;

public class CounselorsPanel extends javax.swing.JPanel {
    
    private void loadCounselorsIntoTable() {
        ArrayList<Counselor> list = CounselorController.getAllCounselors();

        String[] columnNames = { "ID", "Name", "Specialization", "Availability" };
        Object[][] data = new Object[list.size()][4];

        for (int i = 0; i < list.size(); i++) {
            Counselor c = list.get(i);
            data[i][0] = c.getId();
            data[i][1] = c.getName();
            data[i][2] = c.getSpecialization();
            data[i][3] = c.getAvailability();
        }

        jTable1.setModel(new javax.swing.table.DefaultTableModel(data, columnNames));
        lblSelected.setText("Selected: None");

        jTable1.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = jTable1.getSelectedRow();
                if (selectedRow != -1) {
                    
                    String name = jTable1.getValueAt(selectedRow, 1).toString();
                    String speciality = jTable1.getValueAt(selectedRow, 2).toString();
                    String availibility = jTable1.getValueAt(selectedRow, 3).toString();
                    
                    txtCounselorName.setText(name);  
                    cbSpeciality.setSelectedItem(speciality);
                    cbAvailibility.setSelectedItem(availibility);

                    lblSelected.setText("Selected: " + name + " (Row " + selectedRow + ")");
                } else {
                    txtCounselorName.setText("");
                    cbSpeciality.setSelectedIndex(-1);
                    cbAvailibility.setSelectedIndex(-1);
                    
                    lblSelected.setText("Selected: None");
                }
            }
        });
    }

    /**
     * Creates new form ViewCounselors
     */
    public CounselorsPanel() {
        initComponents();
        cbSpeciality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {
            "Academic Support",
            "Career Guidance",
            "Mental Health",
            "Substance Abuse",
            "Grief Counseling",
            "Family Counseling"
        }));
        cbAvailibility.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {
            "08:00 to 17:00",
            "08:00 to 11:00",
            "12:00 to 17:00"
        }));
        loadCounselorsIntoTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAddCounselor = new javax.swing.JButton();
        cbAvailibility = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cbSpeciality = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtCounselorName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblSelected = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnAddCounselor.setText("Add");
        btnAddCounselor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCounselorActionPerformed(evt);
            }
        });

        cbAvailibility.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Availibility");

        cbSpeciality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbSpeciality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSpecialityActionPerformed(evt);
            }
        });

        jLabel3.setText("Speciality");

        jLabel2.setText("Name");

        jLabel5.setText("Add Counselor");

        jButton1.setText("Delete Selected Counselor");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSelected)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnAddCounselor)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdate))
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtCounselorName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cbSpeciality, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbAvailibility, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(250, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(lblSelected)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCounselorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbAvailibility, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddCounselor)
                            .addComponent(btnUpdate))))
                .addContainerGap(200, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddCounselorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCounselorActionPerformed
        String name = txtCounselorName.getText().trim();
        String specialization = cbSpeciality.getSelectedItem().toString();
        String availability = cbAvailibility.getSelectedItem().toString();

        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter the counselor's name.", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        boolean success = CounselorController.addCounselor(name,specialization,availability);
        if (success) {
            JOptionPane.showMessageDialog(this, "Counselor added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            loadCounselorsIntoTable();
            txtCounselorName.setText("");
            cbSpeciality.setSelectedIndex(0);
            cbAvailibility.setSelectedIndex(0);
        } else {
            JOptionPane.showMessageDialog(this, "Failed to add counselor.", "Error", JOptionPane.ERROR_MESSAGE);
        }        
    }//GEN-LAST:event_btnAddCounselorActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a counselor to delete.", "No Selection", JOptionPane.WARNING_MESSAGE);
            return;
        }
       
        // Assuming the name is in column 0
        String name = jTable1.getValueAt(selectedRow, 1).toString();
        System.out.println(name);        
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete " + name + "?", "Confirm", JOptionPane.YES_NO_OPTION);
        
        if (confirm != JOptionPane.YES_OPTION) return;
        boolean success = CounselorController.deleteCounselor(name);

        if (success) {

            JOptionPane.showMessageDialog(this, "Counselor deleted.");
            ((DefaultTableModel) jTable1.getModel()).removeRow(selectedRow);
            lblSelected.setText("");  // Clear label if needed
        } else {
            JOptionPane.showMessageDialog(this, "Failed to delete counselor.", "Error", JOptionPane.ERROR_MESSAGE);
        }              
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
                                     
        String name = txtCounselorName.getText().trim();
        String specialization = cbSpeciality.getSelectedItem() != null ? cbSpeciality.getSelectedItem().toString() : "";
        String availability = cbAvailibility.getSelectedItem() != null ? cbAvailibility.getSelectedItem().toString() : "";

        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a counselor from the table first.", "Selection Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String originalName = jTable1.getModel().getValueAt(selectedRow, 1).toString();
        boolean updated = CounselorController.updateCounselor(originalName, name, specialization, availability);

        if (updated) {
            JOptionPane.showMessageDialog(this, "Counselor updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            loadCounselorsIntoTable();
            resetForm();
        } else {
            JOptionPane.showMessageDialog(this, "Failed to update counselor.", "Update Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void resetForm() {
        txtCounselorName.setText("");
        cbSpeciality.setSelectedIndex(0);
        cbAvailibility.setSelectedIndex(0);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void cbSpecialityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSpecialityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSpecialityActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row=jTable1.getSelectedRow();
        if(row>0){
            txtCounselorName.setText(jTable1.getValueAt(row,0).toString());
            cbSpeciality.setSelectedItem(jTable1.getValueAt(row, 1).toString());
            cbAvailibility.setSelectedItem(jTable1.getValueAt(row, 2).toString());
            
        }// TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCounselor;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbAvailibility;
    private javax.swing.JComboBox<String> cbSpeciality;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblSelected;
    private javax.swing.JTextField txtCounselorName;
    // End of variables declaration//GEN-END:variables
}
